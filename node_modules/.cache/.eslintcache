[{"/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/index.jsx":"1","/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/App.tsx":"2","/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/AllFriends.tsx":"3","/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/FindFriend.tsx":"4","/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/AddFriend.tsx":"5","/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/Home.tsx":"6","/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/Login.tsx":"7","/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/Header.tsx":"8"},{"size":320,"mtime":1619566540302,"results":"9","hashOfConfig":"10"},{"size":2480,"mtime":1619572861299,"results":"11","hashOfConfig":"10"},{"size":1115,"mtime":1619574060161,"results":"12","hashOfConfig":"10"},{"size":1192,"mtime":1619551789183,"results":"13","hashOfConfig":"10"},{"size":3084,"mtime":1619574053842,"results":"14","hashOfConfig":"10"},{"size":259,"mtime":1618719016000,"results":"15","hashOfConfig":"10"},{"size":2602,"mtime":1619566155862,"results":"16","hashOfConfig":"10"},{"size":2034,"mtime":1619568171305,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11bd5c9",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/index.jsx",[],"/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/App.tsx",["37"],"import React from \"react\";\nimport \"../App.css\"\nimport {\n  //BrowserRouter as Router,\n  Switch,\n  Route,\n  useHistory,\n  Router\n} from \"react-router-dom\";\nimport { useState } from \"react\"\nimport { ApolloProvider, ApolloClient, createHttpLink, InMemoryCache } from \"@apollo/client\"\nimport { setContext } from \"@apollo/client/link/context\"\nimport Header from \"./Header\"\nimport AddFriend from \"./AddFriend\";\nimport AllFriends from \"./AllFriends\"\nimport FindFriend from \"./FindFriend\"\nimport Login from \"./Login\"\nimport Home from \"./Home\"\nimport settings from \"../settings.json\"\nconst graphqlURL = settings.graphqlEndpoint;\n\nconst httpLink = createHttpLink({ uri: graphqlURL })\n\nlet client: any\n\n//Todo 4 --> follow this link, and figure out what goes on here \n// When you have figured it out, ADD a description on top of the method --> we will do this together\n// https://www.apollographql.com/docs/react/networking/authentication/\nexport function makeClient() {\n  const authLink = setContext((_, { headers }) => {\n    const base64Token = localStorage.getItem('base64AuthString');\n    return {\n      headers: {\n        ...headers,\n        Authorization: base64Token ? base64Token : \"\"\n      }\n    }\n  });\n\n  client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache()\n  })\n}\nmakeClient()\n\nexport default function App() {\n\n  //Observe this will keep you logged in forever, until you manually logout\n  const [isLoggedIn, setIsLoggedIn] = useState(localStorage.getItem(\"base64AuthString\") !== null)\n  const history = useHistory()\n\n  const setLoginStatus = (status: boolean) => {\n    console.log(\"--->\", status)\n    setIsLoggedIn(status)\n    history.push(\"/\")\n  }\n\n  return (\n    <div>\n    \n      <Header loginMsg={isLoggedIn ? \"Logout\" : \"Login\"} isLoggedIn={isLoggedIn} setLoginStatus={setLoginStatus} />\n      {/* <hr /> */}\n      <ApolloProvider client={client}>\n        <div className=\"content\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Home />\n            </Route>\n            <Route path=\"/allFriends\">\n              <AllFriends />\n            </Route>\n            <Route path=\"/findFriend\">\n              <FindFriend />\n            </Route>\n            <Route path=\"/addFriend\">\n              <AddFriend />\n            </Route>\n            <Route path=\"/login\" >\n              <Login setLoginStatus={setLoginStatus} />\n            </Route>\n          </Switch>\n        </div>\n      </ApolloProvider>\n    </div>\n  );\n}","/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/AllFriends.tsx",[],"/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/FindFriend.tsx",[],"/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/AddFriend.tsx",["38","39","40","41","42","43","44","45"],"import React, { useMemo, useState } from \"react\";\nimport IFriend, { Gender } from \"../interfaces/interfaces\"\nimport { useMutation, gql, ApolloClient, ApolloError } from \"@apollo/client\"\nimport {ALL_FRIENDS} from \"./AllFriends\"\n\n\n\n\ninterface IFriendResult {\n  createFriend: IFriend\n}\n\n \ninterface FriendInput  {\n  firstName: string\n  lastName: string\n  email: string\n  password: string \n}\ninterface IFriendInput  {\n  friend: FriendInput\n}\n\n\nconst ADD_FRIEND = gql`\nmutation createFriend($friend: FriendInput) {\n  createFriend(input:$friend){\n    firstName\n    lastName\n    email\n    id\n    role\n  }\n}`\n\ntype AddFriendProps = {\n  initialFriend?: FriendInput\n}\n\ninterface IKeyableFriend extends FriendInput {\n  [key: string]: any\n}\nconst AddFriend = ({ initialFriend }: AddFriendProps) => {\n  const EMPTY_FRIEND: FriendInput = { firstName: \"\", lastName: \"\", email: \"\" , password:\"\"}\n  let newFriend = initialFriend ? initialFriend : { ...EMPTY_FRIEND }\n\n  const [friend, setFriend] = useState({ ...newFriend })\n  const [err, setErr] = useState(\"\")\n  const [fData, setFdata] = useState(\"\")\n  const [createFriend, {loading, data}] = useMutation<IFriendResult, IFriendInput>(\n    ADD_FRIEND,\n    {\n    update(cache, {data}){\n      const addedFreind = data?.createFriend;\n      const d: any = cache.readQuery({query: ALL_FRIENDS})\n      if (!d){\n        return\n      }\n      let allFriends = d.getAllFriends\n      \n      cache.writeQuery({\n        query: ALL_FRIENDS,\n        data: {getAllFriends: [...allFriends, addedFreind]}\n      })\n\n    }\n    }\n    )\n\n  const handleChange = (event: any) => {\n    const id = event.currentTarget.id;\n    let friendToChange: IKeyableFriend = { ...friend }\n\n  \n    friendToChange[id] = event.currentTarget.value;\n    \n    setFriend({ ...friendToChange })\n  }\n\n   interface apiError{\n    message: string\n  }\n  const  handleSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n \n    createFriend({\n      variables:{friend:{...friend}}\n    }).then(res => setFdata(\"w\")).catch((fejl? : apiError)=>{\n      if (fejl) {\n        setErr(fejl.message)\n      } else {\n        setErr(\"\")\n      }\n\n    })\n     \n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      {err != \"\" && err != \"undefined is not an object\" && <p style={{color: \"red\"}}>{err}</p>}\n     {loading && <p>Loading...</p>}\n      <label>\n        FirstName<br />\n        <input type=\"text\" id=\"firstName\" value={friend.firstName} onChange={handleChange} />\n      </label>\n      <br />\n      <label>\n        LastName <br />\n        <input type=\"text\" id=\"lastName\" value={friend.lastName} onChange={handleChange} />\n      </label>\n      <br />\n      <label>\n        Email <br />\n        <input type=\"text\" id=\"email\" value={friend.email} onChange={handleChange} />\n      </label>\n      <br />\n      <label>\n        Password <br/>\n        <input type=\"text\" id=\"password\" value={friend.password} onChange={handleChange} />\n        <br />\n     </label>\n      <br /><br />\n      <input type=\"submit\" value=\"Save Friend\" />\n    </form>\n  );\n}\n\nexport default AddFriend;","/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/Home.tsx",[],["46","47"],"/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/Login.tsx",[],"/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/Header.tsx",[],{"ruleId":"48","severity":1,"message":"49","line":8,"column":3,"nodeType":"50","messageId":"51","endLine":8,"endColumn":9},{"ruleId":"48","severity":1,"message":"52","line":1,"column":17,"nodeType":"50","messageId":"51","endLine":1,"endColumn":24},{"ruleId":"48","severity":1,"message":"53","line":2,"column":19,"nodeType":"50","messageId":"51","endLine":2,"endColumn":25},{"ruleId":"48","severity":1,"message":"54","line":3,"column":28,"nodeType":"50","messageId":"51","endLine":3,"endColumn":40},{"ruleId":"48","severity":1,"message":"55","line":3,"column":42,"nodeType":"50","messageId":"51","endLine":3,"endColumn":53},{"ruleId":"48","severity":1,"message":"56","line":49,"column":10,"nodeType":"50","messageId":"51","endLine":49,"endColumn":15},{"ruleId":"48","severity":1,"message":"57","line":50,"column":34,"nodeType":"50","messageId":"51","endLine":50,"endColumn":38},{"ruleId":"58","severity":1,"message":"59","line":100,"column":12,"nodeType":"60","messageId":"61","endLine":100,"endColumn":14},{"ruleId":"58","severity":1,"message":"59","line":100,"column":25,"nodeType":"60","messageId":"61","endLine":100,"endColumn":27},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useMemo' is defined but never used.","'Gender' is defined but never used.","'ApolloClient' is defined but never used.","'ApolloError' is defined but never used.","'fData' is assigned a value but never used.","'data' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-global-assign","no-unsafe-negation"]