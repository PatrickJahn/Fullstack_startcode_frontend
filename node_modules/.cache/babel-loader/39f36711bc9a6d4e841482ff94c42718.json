{"ast":null,"code":"var _jsxFileName = \"/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/AllFriends.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ALL_FRIENDS = gql`\nquery{\n  getAllFriends {\n     id\n    firstName\n    lastName\n    email\n    \n  }\n}\n`;\nexport default function All() {\n  _s();\n\n  const {\n    loading,\n    error,\n    data,\n    refetch\n  } = useQuery(ALL_FRIENDS, {\n    fetchPolicy: \"cache-first\"\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 27\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: error.toString()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"firstName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"lastName\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 44\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 61\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [console.log(data === null || data === void 0 ? void 0 : data.allFriends), data && data.allFriends.map(friend => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: friend.id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 28\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: friend.firstName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: friend.lastName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 75\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: friend.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 101\n          }, this)]\n        }, friend.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 8\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => refetch(),\n      children: \" Refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 16\n  }, this);\n}\n\n_s(All, \"wIys7a1iz5leStvhDIYyT3P0xQY=\", false, function () {\n  return [useQuery];\n});\n\n_c = All;\n\nvar _c;\n\n$RefreshReg$(_c, \"All\");","map":{"version":3,"sources":["/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/AllFriends.tsx"],"names":["React","useQuery","gql","ALL_FRIENDS","All","loading","error","data","refetch","fetchPolicy","toString","console","log","allFriends","map","friend","id","firstName","lastName","email"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,GAAnB,QAA8B,gBAA9B;;AAOA,OAAO,MAAMC,WAAW,GAAGD,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVO;AAYP,eAAe,SAASE,GAAT,GAAe;AAAA;;AAE1B,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,KAAV;AAAiBC,IAAAA,IAAjB;AAAuBC,IAAAA;AAAvB,MAAkCP,QAAQ,CAC9CE,WAD8C,EAE9C;AAACM,IAAAA,WAAW,EAAC;AAAb,GAF8C,CAAhD;AAIE,MAAIJ,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAIC,KAAJ,EAAW,oBAAO;AAAA,cAAIA,KAAK,CAACI,QAAN;AAAJ;AAAA;AAAA;AAAA;AAAA,UAAP;AACX,sBAAS;AAAA,4BACR;AAAO,MAAA,SAAS,EAAC,OAAjB;AAAA,8BACE;AAAA,+BACC;AAAA,kCAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAJ,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAf,eAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAjC,eAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,mBACCC,OAAO,CAACC,GAAR,CAAYL,IAAZ,aAAYA,IAAZ,uBAAYA,IAAI,CAAEM,UAAlB,CADD,EAEGN,IAAI,IAAIA,IAAI,CAACM,UAAL,CAAgBC,GAAhB,CAAqBC,MAAD,iBAEjC;AAAA,kCAAoB;AAAA,sBAAKA,MAAM,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAApB,eAAwC;AAAA,sBAAKD,MAAM,CAACE;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAxC,eAAmE;AAAA,sBAAKF,MAAM,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAAnE,eAA6F;AAAA,sBAAKH,MAAM,CAACI;AAAZ;AAAA;AAAA;AAAA;AAAA,kBAA7F;AAAA,WAASJ,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA,gBAFa,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADQ,eAcH;AAAQ,MAAA,OAAO,EAAE,MAAIR,OAAO,EAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAkBL;;GA1BuBJ,G;UAEoBH,Q;;;KAFpBG,G","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from \"react\";\nimport { useQuery, gql } from \"@apollo/client\"\nimport ILyndaFriend from \"../interfaces/interfaces\"\n\ninterface IFriends {\n  allFriends: [ILyndaFriend]\n}\n\nexport const ALL_FRIENDS = gql`\nquery{\n  getAllFriends {\n     id\n    firstName\n    lastName\n    email\n    \n  }\n}\n`\n\nexport default function All() {\n\n    const {loading, error, data, refetch} = useQuery<IFriends>(\n      ALL_FRIENDS,\n      {fetchPolicy:\"cache-first\"}\n      )\n      if (loading) return <p>loading...</p>\n      if (error) return <p>{error.toString()}</p>\n      return ( <div>\n       <table className=\"table\">\n         <thead>\n          <tr><th>ID</th><th>firstName</th><th>lastName</th><th>Email</th></tr>\n         </thead>\n         <tbody>\n         {console.log(data?.allFriends)}\n           {data && data.allFriends.map((friend) => (\n\n       <tr key={friend.id}><td>{friend.id}</td><td>{friend.firstName}</td><td>{friend.lastName}</td><td>{friend.email}</td></tr> \n           ))}\n        \n         </tbody>\n         </table>\n            <button onClick={()=>refetch()}> Refresh</button>\n      </div>)\n\n \n}"]},"metadata":{},"sourceType":"module"}