{"ast":null,"code":"var _jsxFileName = \"/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/FindFriend.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useState } from \"react\";\nimport { useLazyQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_FRIEND = gql`\n query getFriend($id: ID) {\n    getFriend(id:$id){\n     id\n     email\n     firstName\n     lastName\n   }\n}\n`;\nexport default function FindFriend() {\n  _s();\n\n  const [id, setId] = useState(\"\");\n  const [getFriend, {\n    loading,\n    called,\n    data\n  }] = useLazyQuery(GET_FRIEND, {\n    fetchPolicy: \"cache-first\"\n  });\n\n  const fetchFriend = () => {\n    getFriend({\n      variables: {\n        id\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"txt\",\n      value: id,\n      onChange: e => {\n        setId(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 10\n    }, this), \"\\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchFriend,\n      children: \"Find Friend\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Fetch a friend using the provided id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), called && loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 31\n    }, this), data && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [data.getFriend.firstName, \" \", data.getFriend.lastName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FindFriend, \"Te1cBQVknTx0W4fhGH+fBSIZWds=\", false, function () {\n  return [useLazyQuery];\n});\n\n_c = FindFriend;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindFriend\");","map":{"version":3,"sources":["/Users/Patrick/Desktop/Fullstack_startcode_frontend/src/components/FindFriend.tsx"],"names":["React","useState","useLazyQuery","gql","GET_FRIEND","FindFriend","id","setId","getFriend","loading","called","data","fetchPolicy","fetchFriend","variables","e","target","value","firstName","lastName"],"mappings":";;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,YAAT,EAAuBC,GAAvB,QAAkC,gBAAlC;;AAeA,MAAMC,UAAU,GAAGD,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,eAAe,SAASE,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,EAAD,EAAKC,KAAL,IAAcN,QAAQ,CAAC,EAAD,CAA5B;AACA,QAAM,CAACO,SAAD,EAAW;AAACC,IAAAA,OAAD;AAASC,IAAAA,MAAT;AAAgBC,IAAAA;AAAhB,GAAX,IAAoCT,YAAY,CACpDE,UADoD,EAEpD;AAACQ,IAAAA,WAAW,EAAC;AAAb,GAFoD,CAAtD;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACxBL,IAAAA,SAAS,CAAC;AAACM,MAAAA,SAAS,EAAE;AAACR,QAAAA;AAAD;AAAZ,KAAD,CAAT;AAED,GAHD;;AAKA,sBACE;AAAA,mCACK;AAAO,MAAA,IAAI,EAAC,KAAZ;AAAkB,MAAA,KAAK,EAAEA,EAAzB;AAA6B,MAAA,QAAQ,EAAES,CAAC,IAAI;AAC7CR,QAAAA,KAAK,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAL;AACD;AAFE;AAAA;AAAA;AAAA;AAAA,YADL,wBAIS;AAAQ,MAAA,OAAO,EAAEJ,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJT,eAKE;AAAA;AAAA;AAAA;AAAA,YALF,eAME;AAAA;AAAA;AAAA;AAAA,YANF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASKH,MAAM,IAAID,OAAV,iBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAT1B,EAUKE,IAAI,iBAAI;AAAA,iBAAIA,IAAI,CAACH,SAAL,CAAeU,SAAnB,OAA+BP,IAAI,CAACH,SAAL,CAAeW,QAA9C;AAAA;AAAA;AAAA;AAAA;AAAA,YAVb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAzBuBd,U;UAEoBH,Y;;;KAFpBG,U","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\n\nimport React, { useState } from \"react\";\nimport { useLazyQuery, gql } from \"@apollo/client\"\nimport IFriend from \"../interfaces/interfaces\"\n\n\n\ninterface IFriendResult {\n  getFriend: IFriend\n}\n\n\ninterface IVariableInput {\n  id: string\n}\n\n\nconst GET_FRIEND = gql`\n query getFriend($id: ID) {\n    getFriend(id:$id){\n     id\n     email\n     firstName\n     lastName\n   }\n}\n`\n\nexport default function FindFriend() {\n  const [id, setId] = useState(\"\")\n  const [getFriend,{loading,called,data}] = useLazyQuery<IFriendResult, IVariableInput>(\n    GET_FRIEND,\n    {fetchPolicy:\"cache-first\"}\n  );\n\n  const fetchFriend = () => {\n    getFriend({variables: {id}})\n \n  }\n\n  return (\n    <div>\n      ID:<input type=\"txt\" value={id} onChange={e => {\n        setId(e.target.value)\n      }} />\n      &nbsp; <button onClick={fetchFriend}>Find Friend</button>\n      <br />\n      <br />\n\n      <h2>Fetch a friend using the provided id</h2>\n        {called && loading && <p>Loading...</p>}\n        {data && <p>{data.getFriend.firstName} {data.getFriend.lastName}</p>}\n    </div>)\n}\n"]},"metadata":{},"sourceType":"module"}